import {expect, test} from '@oclif/test'
import * as fs from 'fs-extra'
import * as  Util from '../src/util'
import {IConfig} from '@oclif/config'

const originalGetHelpPlugin = Util.getHelpPlugin
const readme = fs.readFileSync('README.md', 'utf8')

describe('readme', () => {
  afterEach(() => {
    // restore original file after each test
    fs.writeFile('README.md', readme)
  })

  test
  .stdout()
  .command(['readme'])
  .it('runs readme', () => {
    expect(fs.readFileSync('README.md', 'utf8')).to.contain('manifest')
  })

  test
  .stdout()
  .finally(() => fs.remove('docs'))
  .command(['readme', '--multi'])
  .it('runs readme --multi', () => {
    expect(fs.readFileSync('README.md', 'utf8')).to.contain('manifest')
  })

  describe('with help plugin', () => {
    test
    .stdout()
    .stub(Util, 'getHelpPlugin', (config: IConfig) => {
      config.pjson.oclif.helpPlugin = './lib/_test-help'
      return originalGetHelpPlugin(config)
    })
    .command(['readme'])
    .it('runs readme', () => {
      expect(fs.readFileSync('README.md', 'utf8')).to.contain(`
## \`oclif-dev pack\`

packages oclif cli into tarballs

\`\`\`
Test help generated by test plugin for: pack
It has the following flags: root, targets, xz
\`\`\`

_See code: [src/commands/pack/index.ts](https://github.com/oclif/dev-cli/blob/v1.22.2/src/commands/pack/index.ts)_`)
    })
  })

})
